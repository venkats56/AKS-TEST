pipeline {
    agent any
    
    environment {
        // Azure Credentials stored in Jenkins
        AZURE_CREDENTIALS = credentials('my-azure-service-principal')  // Replace with your actual credentials ID
        ACR_NAME = 'myacr'  // Replace with your Azure Container Registry name
        AKS_CLUSTER_NAME = 'myaks'  // Replace with your AKS cluster name
        RESOURCE_GROUP = 'myResourceGroup'  // Replace with your Azure Resource Group name
        REGION = 'eastus'  // Replace with your Azure region
    }

    stages {
        stage('Checkout Code') {
            steps {
                checkout scm
            }
        }

        stage('Login to Azure') {
            steps {
                script {
                    echo "Logging into Azure..."
                    azureLogin(
                        credentialsId: 'my-azure-service-principal'  // Replace with your actual Azure Service Principal credentials ID
                    )
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    echo "Building Docker image..."
                    // Build your Docker image
                    def dockerImage = docker.build("myapp:${env.BUILD_ID}")
                }
            }
        }

        stage('Login to ACR') {
            steps {
                script {
                    echo "Logging into Azure Container Registry (ACR)..."
                    sh "az acr login --name ${env.ACR_NAME}"
                }
            }
        }

        stage('Push to ACR') {
            steps {
                script {
                    echo "Pushing Docker image to ACR..."
                    // Tag the Docker image and push to ACR
                    sh "docker tag myapp:${env.BUILD_ID} ${env.ACR_NAME}.azurecr.io/myapp:${env.BUILD_ID}"
                    sh "docker push ${env.ACR_NAME}.azurecr.io/myapp:${env.BUILD_ID}"
                }
            }
        }

        stage('Deploy to AKS') {
            steps {
                script {
                    echo "Deploying to AKS..."
                    // Set up kubectl to use AKS cluster credentials
                    sh "az aks get-credentials --resource-group ${env.RESOURCE_GROUP} --name ${env.AKS_CLUSTER_NAME}"

                    // Deploy to AKS using kubectl
                    sh "kubectl apply -f kubernetes/deployment.yaml"  // Adjust the path to your Kubernetes deployment manifest
                }
            }
        }

        stage('Post Actions') {
            steps {
                script {
                    echo "Pipeline completed!"
                }
            }
        }
    }

    post {
        success {
            echo "Deployment succeeded!"
        }

        failure {
            echo "Deployment failed!"
        }

        always {
            cleanWs()  // Clean workspace after the job
        }
    }
}


